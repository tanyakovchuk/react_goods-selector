{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","goods","removeGood","good","setState","prevState","filter","value","addGood","strOfGoods","length","join","slice","this","className","map","key","includes","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA8FaC,E,4MA1FbC,MAAQ,CACNC,MAAO,CAAC,Q,EAGVC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,MAAOI,EAAUJ,MAAMK,QAAO,SAAAC,GAAK,OAAIJ,IAASI,U,EAIpDC,QAAU,SAACL,GACT,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,MAAM,GAAD,mBAAMI,EAAUJ,OAAhB,CAAuBE,S,EAIhCM,WAAa,WACX,IAAQR,EAAU,EAAKD,MAAfC,MAER,OAAQA,EAAMS,QACZ,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,mBAAN,OAA0BT,EAAMU,KAAK,MAArC,gBAEF,KAAK,EACH,MAAM,mBAAN,OAA0BV,EAAM,GAAhC,gBAA0CA,EAAM,GAAhD,iBAEF,QACE,MAAO,0BAAmBA,EAAMW,MAAM,GAAI,GAAGD,KAAK,MAA3C,mBACEV,EAAMA,EAAMS,OAAS,GADvB,mB,4CAKb,WAAU,IAAD,OACCT,EAAUY,KAAKb,MAAfC,MAER,OACE,yBAAKa,UAAU,OACb,4BACGD,KAAKJ,cAER,wBAAIK,UAAU,aACXhB,EAAgBiB,KAAI,SAAAZ,GAAI,OACvB,wBAAIa,IAAKb,EAAMW,UAAU,kBACtBX,EACAF,EAAMgB,SAASd,GAEZ,4BACEW,UAAU,kBACVI,KAAK,SACLC,QAAS,WACP,EAAKjB,WAAWC,KAJpB,UAWA,4BACEW,UAAU,eACVI,KAAK,SACLC,QAAS,WACP,EAAKX,QAAQL,KAJjB,WAaR,4BACEW,UAAU,iBACVI,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CACZH,MAAO,OALb,mB,GA1EQmB,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1729c053.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: ['Jam'],\n  }\n\n  removeGood = (good) => {\n    this.setState(prevState => ({\n      goods: prevState.goods.filter(value => good !== value),\n    }));\n  }\n\n  addGood = (good) => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods, good],\n    }));\n  }\n\n  strOfGoods = () => {\n    const { goods } = this.state;\n\n    switch (goods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `Selected goods: ${goods.join(', ')} is selected`;\n\n      case 2:\n        return `Selected goods: ${goods[0]} and ${goods[1]} are selected`;\n\n      default:\n        return `Selected goods: ${goods.slice(0, -1).join(', ')} `\n        + `and ${goods[goods.length - 1]} are selected`;\n    }\n  }\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {this.strOfGoods()}\n        </h1>\n        <ul className=\"App__list\">\n          {goodsFromServer.map(good => (\n            <li key={good} className=\"App__list-item\">\n              {good}\n              {goods.includes(good)\n                ? (\n                  <button\n                    className=\"App__btn-remove\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.removeGood(good);\n                    }}\n                  >\n                    remove\n                  </button>\n                )\n                : (\n                  <button\n                    className=\"App__btn-add\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.addGood(good);\n                    }}\n                  >\n                    add\n                  </button>\n                )\n              }\n            </li>\n          ))}\n          <button\n            className=\"App__btn-clear\"\n            type=\"button\"\n            onClick={() => {\n              this.setState({\n                goods: [],\n              });\n            }}\n          >\n            CLEAR ALL\n          </button>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}